1.int main(int argc, char const *argv[])中两个参数的含义。
argc：传入参数的个数；argv 指针数组，保存所输入的命令
2.对各库文件的了解,eg:stdlib.h？
3.typedef struct 与 struct 的区别？https://www.cnblogs.com/qyaizs/articles/2039101.html
4.exit（1/-1）异常退出，exit（0）正常退出。

cfg编译：
1.makefile与shell混用什么时候需要；
2.#pragma预编译指令；
3.插件与工程的关系；
4.插件是否可以作为一种应用软件；
5.bin目录下面的tool是如何被使用的，比如bin2c工具;
6.版本文件夹build管理原理；
7.各文件夹之间的关系，工程所建位置不同有什么区别,如/cfg/project与/cfg/src/referencethirdinterface

8.3
1.#if defined(MMCP_MEMUSED_PRINT) && (MMCP_MEMUSED_PRINT != 0)？？？

2.typedef enum
{
	EM_MEM_MODE_START = 0x100,  // 枚举边界
	EM_MEM_NORMAL,              // 直接调用udi接口，可限制内存使用大小
	EM_MEM_DEBUG,               // 含有调试信息
	EM_MEM_DLMALLOC,            // dlmalloc 
	EM_MEM_MODE_END             // 枚举边界
} CSMemMgrMode_E;

基础结构：
枚举：
1.所有元素为常量；
2.第一个元素的初始值为，后续元素加1；
联合体：
结构体：

内存分配的几种方式：
1.alloca
函数原型：
功能：向栈空间申请内存，使用之后无需释放；
2.malloc
函数原型：void *malloc(size_t size)
功能：分配堆空间，但是未对对空间进行初始化，可以使用memset（）函数进行初始化；
3.calloc
函数原型：void *calloc(size_t nobj, size_t size);
功能：分配堆空间，并将其初始化为0；
4.realloc
函数原型： void* realloc(void* ptr, unsigned newsize)
功能：为已经分配的地址的指针Ptr，重新分配空间；
若新内存大于原内存，原内存空间内容不变，增加的空间不进行初始化。若原内存之后的字节可以实现内存的扩展，那么就往后进行内存扩展，若原内存之后的空间不够扩展需求大小，那么将会重新分配一个空间，并将原内存数据拷贝更新到新内存，将原内存进行回收；
若新内存小于原内存，被缩小的内容将会丢失；
注意：若我们对内存有新的用途，需要使用前进行memset()操作。所有的在堆上申请的空间使用完之后都要释放，否则将造成堆空间的减少。

线程与进程的区别：

分布式系统：
亚马逊：Distributed Systems Concepts and Design  https://pdos.csail.mit.edu/6.824 lab 完成
各种论文 开源系统包括 hadoop 、 hbase 、 spark 、 mesos 这些也要了解，包括架构设计、解决了什么样的问题还有提供了怎样的编程模型 or 存储模型。https://github.com/ty4z2008/Qix/blob/master/ds.md


./device/hisilicon/Hi3798CV200/kernel_module.sh 不存在


文件操作指令：
 find ./ -name *.out  |  xargs  -I  '{}'  mv  {}  ~/


视频处理中的术语：
海思子系统：
分为视频输入（VI）、视频处理（VPSS）、视频编码（VENC）、视频解码（VDEC）、视频输出(VO)、视频侦测分析(VDA)、音频输入(AI)、音频输出(AO)、音频编码（AENC）、音频解码（ADEC）、区域管理（REGION）等模块

网卡使用

