PCR：用来同步前端编码器和后端机顶盒的时钟
SUBTITLE:字幕
TELTEXT：电文
SVR：感知软探针采集器
PTS：播放时间戳
i帧：内部画面。GOP的第一帧数据
PTS：显示时间戳
DTS：解码时间戳

记录切台过程中各时间点的最大值 个数：MAX_RECORD_TIME ，最大可以记录且换时间的节目数

播放器模块：

播放器的组成：事件信息、播放器（3个）、播放信息类型、停止类型、注入数据类型、回放数据类型、播放速度、
播放模式：文件播放（本地文件与网络文件）、PVR录制回放、PVR录制、直播、注入、
播放器类型：直播（live），注入（在本地有查询请求下得到的信息，注入也有自己的数据类型-音、视、字幕（字符、图片)、I帧（图片）），时移播放（回播）、PVR播放（将音视频数据存储在硬盘上，可以反复进行播放）
播放通道（器）结构：demux、video、audio
播放器的功能：播放器的实现-创建-使用、
视频模块：
VBI功能：teletext、VBI CLOSE、Macrovision、CGMS
视频截图

基本分类：本地文件、非本地文件播放

--本地文件播放流程：
1.创建文件播放器（获取一个空闲的音视频播放器、检测是否有解码器被用于文件解码、关闭未使用的本地文件播放器资源、本地文件播放接口的初始化（各种库的使用准备）、创建SVR播放器（需要视频播放窗口参数、demuxID、portid）、TS端口设置（ram模式）、文件播放时间函数注册（检测播放事件的情况）；
2.文件播放设置（字母显示函数、擦出函数）
3.事件处理函数的注册
4.启动播放器（播放窗口创建、窗口属性设置）- 本地文件未设置视频解码器
5.播放速度、恢复、暂停、音频、视频、播放位置设置、播放器设置
6.停止播放器
7.销毁播放器

--非本地文件播放-注入
1.获取demux绑定的端口号
2.voip资源获取（voip实现模数转换）
3.创建TS流播放器（AVPlayer、音视频通道）
4.设置视频窗口

--为录制/回放创建/打开播放器：
1.查找空闲播放器
2.创建TS流播放器（AVPlayer、音视频通道）
3.设置播放窗口（创建窗口、将窗口绑定到AVplayer上、对窗口进行使能、音频混音及输出设置）
4.创建TS缓冲区（查找未被使用的RAM端口，为arm端口创建TS缓冲区、将demux与端口绑定）

--live模块：
1.初始化，消息队列，处理线程（音视频播放、杜比处理、云复位音频），互斥锁；
2.注册函数参数、注册函数的能力测试（可以注册的函数个数）；播放器的创建与销毁；
3.节目信息的设置/查看（PCR、画面长宽等、）；
4.播放的开始/停止/恢复
	打开：初始化检测-否则进行初始化，对应数据类型的配置，获得空闲的解码器，播放器的创建（d、v、a）与demux绑定，后而与v.a绑定（不成功，需要及性能关闭，销毁操作），
	为MMCP预留，
	开始：使用播放器前-是否已经被启用-是否置流-加密方式的检测，创建播放通道，开启播放通道（不成功也需要销毁通道的操作），
5.换错缓存数据的清除-重置窗口、音视频播放器重置、窗口状态
6.设置/获取 视频播放速率
	设置：
7.时移播放设置，位置：先获取当前节目的总时长及其他信息-->
8.获取播放器的状态信息（当前播放时间）
9.获取当前节目指定流的数据包（TS包）个数
10.模式切换



码流的设置：
1.码流类型的检测（音频、视频支持类型的检测、流的重复检测）
2.可以进行setstream操作的条件检测
3.对每个流（音、视、PCR）进程操作，音频设置-AV设置、是否需要解扰器、获取PID数据通道话柄；视频设置-；PCR设置-最终开启播放器；UDIGetEnvValue



关联-tuner：信道解码

类型--关系到解调的方式
dma模式-dma类型demux后处理
软注入模式-inject类型demux后处理，自行注入到demux
锁频流程：配置信息的获取、tuner信息处理函数、锁频（由tunerid获取tuner属性、设置调制类型调用信息处理接口）、连接解调器




详解-demux：

每个demux拥有多个filter；可处理数据类型为PSI/SI、PES、RAW（原始数字化的模拟信号）
	组成：信道接口（传输包同步字节的检测）-端口（tuner、ram）
	      信道FIFO（先入先出）-通道（（PSI/SI）section、ecm、emm、post（PID分类通道）、PES、音视频通道）
		PID处理器（音视频PID包处理（其有PID表））--section 过滤、PES过滤、ecm、emm过滤、
		PID后处理器（包头滤波、PES包头滤波、数据滤波和ECM滤波）
		内部音视频接口（音视频数据-》解码器）
		节目时钟提取：为与解码器时钟的同步
		解扰器：TS级解扰、PES级解扰、未加扰---是否要读取CA卡信息
	该设备所具有的能力：数据包的判断、录制处理、



详解-注入：

注入器的组成：avplayer、TS缓冲区、ps/pes缓冲区、注入通道结构及类型、信息同步模式、PCM数据参数及端类型、I帧数据参数、
注入源类型-PCM/ES(编码后的数据-只含有一种数据类型，由若干AU组成)/PES（PES打包器打包ES数据）/TS（对PES包的封装-定长）/AVI（audio video interlace format）/RM（固定码率编码）/RMVB（可变比特率）/PS（PES包组成-变长）
注入通道结构：demux、video、audio
注入的数据缓冲区类型：AVPlayer缓冲（音视频、i帧数据）、PES缓冲（PS数据）、demux_TS缓冲（TS数据）、
注入数据中包含的数据类型：音视频、subtitle、teletext、iframe
注入数据对通道的要求：
TS-demux、audio、video
ES-demux、audio、video
PS-demux、video
PCM-实际什么都不需要、但是一天、但是依然为器抽象了一个音频解码器
注入缓冲区数据的播放控制（将其清除、等待播放）

PCM注入
--查找PCM解码器、获取空闲inject（没有实际的创建）、设置音频信息（点、率、声道/通道、端模式）、开始（起始就只是看了一下是否开始了）、inject注入等待（缓冲中的数据可以播放完成）-就是播放缓冲区中的数据、清除（清除注入缓冲数据、播放器复位）、空闲缓冲区获取（及AVplayer空闲缓冲的获取、大小、空间指针）、写缓冲区（将数据放到avplayer缓冲-更新指针）、停止（啥也没有做）、
--pcm文件：获取AV播放器的缓冲空间、读取一定长度的文件数据到缓冲区中、并与线程绑定-专门来做这件事情、暂停（音视频同开的时候要分别暂停）
--PCM软件生成：告诉注入线程PCM（本地产生）数据及其将要放置的位置、获取demux数据端口获得数据、依据数据格式（TS、PS）创建播放器（获取配置-创建AVPLAYER播放器-分别打开播放器的音视频播放通道）、暂停（）

IFrame注入（其本质是ES数据包）
--开始（打开对应id视频解码器）、注入器开始（什么也没有做）、播放器的开始（注入器的类型参数监测、获取I帧数据、解码I帧数据）、

PS注入-打开-创建一个inject实例（获取inject信息-查找空闲inject、创建TS缓冲区、绑定ARM-port）、获取相关信息（获取数据类型的音/视频解码器id、设置inject属性与数据类型）、初始化音(设置音量)/视（窗口属性设置）频播放信息、开始（获取PESAVplayer及其属性、打开PES模块-处理音视频数据）、设置（注入源-信号量的获取）、停止（清除TS缓冲区、复位AV播放器）


详解-PVR：节目录制、时移录制、ts流录制
详解-直播：
详解-文件播放：




注意：

1.DEMUX只能绑定到一个PORT，但是一个PORT的数据可以分发到多个DEMUX；
2.只有section类型的通道和ecm emm类型的通道支持设置CRC模式；
3.播放类型和同时播放与录制类型的音视频通道是不能申请的，音视频的播放通道由Player统一分配和管理；
4.播放器与demux的对应关系是在播放器创建的时候确定，后续在分别为此播放器打开音视频通道；
5. 
6.通道内是否有数据到达是被实时监控的，但是谁负责在监控？
7.各通道的输出基本是完整的数据包（section、PES、ts包-post类型通道）了，音视频数据信息与其他信息是分开的（对于音视频通道是不能通过海思外部接口获取数据的，音视频数据会通过内部接口直接送给解码器进行解码）；
8.TS端口模式：tuner模式、ram模式、dvb模式、tso端口
9.解码：
硬解码-专门的解码芯片（本地）
软解码-利用CPU实现（多用于直播）
10.同一个音频输出设备,可以打开多个混音器
11.音频在解码前后的设置是可以不一致的
12.混音器有软硬之分，软音频处理，硬音响设置。
13.声音的不同声道放在不同的通道中，原始音频数据（采用位数、采用率、声道数）决定的。
14.解扰的完成：card（va_systen_id）-cat(emm_id)-emm(用户秘钥)-pmt(ecm_pid)-ecm(CW控制信息)-解码芯片寄存器-码流解扰-恢复原始数据
15.CSUDIOSThreadCreate("INJECT001", INJECTTHREADPRO, INJECTTHREADBUF, pcm_injectTask, ( void* ) &g_PCMPlayInfo[EM_INJECT_PCM_BIG], &hInjectThread)线程在创建的时候可以将其与处理时间进行绑定










问题：

1.当前播放位置的绝对时长？
2.播放器事件最大值HIADP_PLAYER_EVENT_MAX与流信息最大数量HIADP_PLAYER_STREAM_MAX有关系吗，还是事件与处理线程有关，信息只与存储有关？
3.  HI_HANDLE           hAVPlay; 
    HI_HANDLE           hSVRPlayer; /*用于本地媒体播放*/
    HI_HANDLE           hWindow;？？？？这个播放器的作用是什么--窗口话柄
4.为什么只播放I帧？
--I帧优于其他帧的
5.录制为什么还需要加密操作？CA加密流（CA是可以做加密与解扰/解密吗？）
--因为这些数据涉及到业务的时候，为信息的保护液是很有必要的
6.通道demux是如何将数据存放的？
--经过port端口得到数据，port端口有分为tuner、和arm类型，tuner是广电信号、arm可以是软件注入。
7.player的设置与修改区别是什么？并且修改中有状态机的使用？
--
8.前端码流是否停播的判断，数据包个数判断？
--实际其应该还是要依据当前数据参数以及当前数据的流动情况才可以判断，前端是否停播了。
实际流程是怎样的未知？
9.为何要为MMCP预留player？
--
10.视频设置接口？setstream(只有一种数据类型-分别设置-音-视-同步信息，没有同步设置)与setfileplaystream(同时记录了所有数据的ID)的区别是什么?
--文件流设置，就是将文件数据位置告知出来？？？？

11.过滤器深度与什么有关？
--
12.TS端口模式，内部、外部、内存，内部指的是什么？
13.AVPlayer数据帧场的概念不清楚？
--水平扫描（行），垂直扫描（场）
14.视频模块与player的区别是什么呢?
--plyer重要组件解调器（音视频解码），其中包括数据的获得（demux），播放事件的处理，播放控制处理，
--video重要组件视频解码器，视频窗口的创建、设置，做视觉管理
15.demux与tuner（做了信道解码-为了更好的传输）的对接方式是什么？
--demux有port-tuner端口，可以将两者进行绑定。
16.（mixer）混音的作用是什么，是与声道的设置有关系吗？
--混音器（软硬之分），软件设备实现的音频处理-将多个音频文件或者是音频信号合并为一个音频文件，硬件设备实现的是音响设置-将各音频信号经过硬件电路，控制分路信号音量，最后得到输出
--声道，每种声道有自己的通道，每个声道对应不同的声道信息
17.配置文件中的视频解码器与头文件中定义的视频解码器数量有什么区别？
--
18.每个demux、video、audio支撑的工作类型是谁在哪里设置的？
--是谁在使用的时候就进行相关的设置，便确定了器类型，对吗？？？？？？

19.UDI_OpenAVChannel该接口，实际进行的是设置操作？
--
20.高标清同源，指的是一个数据源吗？
--高清和标清使用的是相同的数据口
21.什么是PCM大端文件和小端文件？
--数据的存储模式分为大端模式与小端模式，影响到数据的读取方式
22.injecter最终使用的是avplayer吗，其本质是不是也是一个播放器？
---inject不是播放器，是一个通道，只是在实现注入播放的时候要与播放相关联起来。
23.inject.c-508，为什么在TS注入器判断之后才获取音视频解码器的个数？
--要先可以实现数据的注入，才可以进一步将数据进行解码操作。
24.inject.c-68，在inject使用情况的检查的时候，为什么只是检查了demux、audio、video中的一个？
--
25.使用音频时钟与采用视频时钟有什么区别，以及PCR同步方式？
--PCR传输流时钟（数字设备终端压控振荡器频率与TS流变化率PCR的控制）、音频和视频之间的时钟是为了控制声音与显示的同步、当然为了实现数据的正常显示还要控制解码与显示之间的同步。
26.注入的类型有5种，但是只是讲到了TS流、i帧、音频、那么TS流中是可以涵盖其他几种的吗？
--标题与字幕信息是可以涵盖在图片与字符中吗??
--字幕-subtitle/cc（硬字幕-将字幕覆盖到视频画面、外挂字幕-字幕是单独的文件、软字幕-将字幕与视频打包）
  有图片格式、文本格式、SRT格式、SMI格式、SSA/ASS格式、
--teletext：存在于DVB信息和analog channel-数据广播
27.inject-41 CSUDISYNCMode_E  eSyncMode 与 CSUDIPESSYNCMode_S  stSyncMode两个同步方式有什么不同？

28.iframe_inject-246_OpenClose_002 传入非法的设备id返回也是成功的？？？
--ES注入不需要demux、audio，只需要video解码器。
29.在进行新帧事件的时候，申请信号量的作用是什么？
30.在测试过程中，若在一个测试案例正在进行的时候终止了测试，那么他之前申请的空间是如何释放的？？？？


















测试框架理解：
test------testdata
     |____config
     |____testcase_of_module
     |____

testkit框架所提供的功能：
1.模式控制：
自动模式
手动模式
2.配置文件信息的获取


